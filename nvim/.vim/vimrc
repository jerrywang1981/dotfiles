if &compatible
  set nocompatible
endif
" Add the dein installation directory into runtimepath
set runtimepath+=~/.cache/dein/repos/github.com/Shougo/dein.vim

let s:deintoml = '~/.vim/config/dein.toml'
let s:lazytoml = '~/.vim/config/lazy.toml'

let mapleader=','
noremap \ ,
let maplocalleader=','
let g:dein#auto_recache = 1
if dein#load_state('~/.cache/dein')
  call dein#begin('~/.cache/dein')

  call dein#load_toml(s:deintoml, {'lazy': 0})
  call dein#load_toml(s:lazytoml, {'lazy': 1})

  call dein#add('~/.cache/dein/repos/github.com/Shougo/dein.vim')

  if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
  else
    call dein#add('cpiger/NeoDebug')
  endif
  call dein#add('wsdjeg/dein-ui.vim')
  call dein#add('easymotion/vim-easymotion')
  call dein#add('w0rp/ale')
  call dein#add('justinmk/vim-sneak')
  call dein#add('tomtom/tlib_vim')
  call dein#add('davidhalter/jedi-vim')
  call dein#add('jiangmiao/auto-pairs')
  call dein#add('thaerkh/vim-workspace')
  call dein#add('scrooloose/nerdcommenter')
  call dein#add('tpope/vim-dispatch')
  call dein#add('kshenoy/vim-signature')
  call dein#add('tpope/vim-surround')
  call dein#add('tpope/vim-unimpaired')
  call dein#add('tpope/vim-repeat')
  call dein#add('tpope/vim-projectionist')
  call dein#add('MarcWeber/vim-addon-mw-utils')
  call dein#add('HerringtonDarkholme/yats.vim')
  call dein#add('sjl/gundo.vim')
  call dein#add('fs111/pydoc.vim')
  call dein#add('alfredodeza/pytest.vim')
  call dein#add('ConradIrwin/vim-bracketed-paste')
  call dein#add('jmcantrell/vim-virtualenv')
  call dein#add('wellle/targets.vim')
  call dein#add('artur-shaik/vim-javacomplete2')
  call dein#add('editorconfig/editorconfig-vim')
  call dein#add('skywind3000/vim-preview')
  call dein#add('skywind3000/asyncrun.vim')
  call dein#add('kassio/neoterm')
  call dein#add('lifepillar/vim-solarized8')
  call dein#add('dracula/vim', {'name': 'dracula', 'normalized_name': 'dracula'})
  call dein#add('machakann/vim-highlightedyank')

  " call dein#add('vim-scripts/YankRing.vim')
  call dein#add('andys8/vscode-jest-snippets')
  call dein#add('wincent/terminus')
  call dein#add('haya14busa/incsearch.vim')
  call dein#add('haya14busa/incsearch-fuzzy.vim')
  call dein#add('Valloric/ListToggle')
  call dein#add('majutsushi/tagbar')
  call dein#add('lambdalisue/suda.vim')
  call dein#add('tmux-plugins/vim-tmux')
  call dein#add('edkolev/tmuxline.vim')
  call dein#add('christoomey/vim-tmux-navigator')
  call dein#add('janko-m/vim-test')
  call dein#add('radenling/vim-dispatch-neovim')

  call dein#end()
  call dein#save_state()
endif

filetype plugin indent on
syntax enable
set path+=**
set updatetime=5000
set directory=~/tmp,/tmp
set foldmethod=indent
set foldlevel=99
set autoindent
set encoding=utf-8
set clipboard+=unnamed  " use the clipboards of vim and win
set go+=a               " Visual selection automatically copied to the clipboard
set number
set relativenumber
set showtabline=2
set guioptions-=r
set guioptions-=R
set guioptions-=l
set guioptions-=L
set guioptions-=b
set nowrap
set fileformat=unix
set cindent
set colorcolumn=80
set tabstop=2
set shiftwidth=2
set softtabstop=2
set showmatch
set scrolloff=5
set laststatus=2
set fenc=utf-8
set backspace=2
set mouse=a
set selection=exclusive
set selectmode=mouse,key
set matchtime=5
set ignorecase
set incsearch
set hlsearch
set expandtab
set whichwrap+=<,>,h,l
set autoread
set cursorline
set cursorcolumn
set history=200
set fixendofline
set diffopt+=vertical
set termguicolors

let g:solarized_termcolors=256




" let g:vim_json_syntax_conceal = 0
let python_highlight_all=1
set t_Co=256

set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
  \,sm:block-blinkwait175-blinkoff150-blinkon175

let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/venv/*,*/node_modules/*
let g:pymode_python = 'python3'

" ----------------nerdcommenter--------------------------
source ~/.vim/config/nerdcommenter.vim


" ----------------vim-rooter --------------------------
" let g:rooter_silent_chdir = 1


" ----------------LeaderF--------------------------
" leaderf configuration "
" let g:Lf_ShortcutF = '<c-p>'
" let g:Lf_CommandMap = {'<Tab>': ['<ESC>']}
" let g:Lf_DefaultMode = 'NameOnly'
" let g:Lf_WindowHeight = 0.3
" let g:Lf_WorkingDirectoryMode = 'Ac'
" let g:Lf_GtagsAutoGenerate = 1
" let g:Lf_Gtagslabel = 'native-pygments'
" let g:Lf_WildIgnore = {
        " \ 'dir': [],
        " \ 'file': ['*.svg']
        " \}


autocmd FileType python set ts=4 | set shiftwidth=4 | set softtabstop=4


"--------------------mapping-------
source ~/.vim/config/mapping.vim

"--------------------terminal-------
source ~/.vim/config/terminal.vim

let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

let g:loaded_python_provider = 1
let g:python3_host_prog  = '/usr/local/Cellar/python/3.7.3/bin/python3'
let g:python_host_prog  = '/usr/bin/python'



autocmd FileType json syntax match Comment +\/\/.\+$+
"


"-------------- auto pair-------------
let g:AutoPairsMapCh = 0
let g:AutoPairsMapCR = 1




"----------------- vim-workspace----------------
let g:workspace_autosave = 0
let g:workspace_persist_undo_history = 0
let g:workspace_autosave_untrailspaces = 0
let g:workspace_session_directory = $HOME . '/.vim/sessions/'



"----------------- yankhighlight----------------
let g:highlightedyank_highlight_duration = 500


if has('nvim')
endif
" source ~/.vim/config/defx.vim
set background=dark
colorscheme dracula

let $NVIM_COC_LOG_LEVEL = 'debug'
" let g:coc_node_args = ['--nolazy', '--inspect-brk=6046']
"

" ----------------- goyo and limelight-----------------

" let g:goyo_width=100
" let g:goyo_linenr=1
" autocmd! User GoyoEnter Limelight
" autocmd! User GoyoLeave Limelight!

" ---------tagbar-----------
let g:tagbar_autofocus = 1

" ----------undo tree------------
let g:gundo_prefer_python3 = 1
let g:gundo_help = 0

" -------lightline-----------
" source ~/.vim/config/lightline.vim
source ~/.vim/config/abbr.vim



" ------------vim-test----------
" let test#java#runner = 'maventest'
let g:test#java#maventest#file_pattern = '\v^(.*[Tt]est.*|.*[Tt]est(s|Case)?)\.java$'
" for neovim
let test#neovim#term_position = "belowright"
" or for Vim8
let test#vim#term_position = "belowright"
let test#strategy = "dispatch"




" Async run
let g:asyncrun_open = 6
let g:asyncrun_bell = 1
let g:asyncrun_rootmarks = ['.svn', '.git', '.root', '_darcs', 'build.xml']


"----------------------- ale --------------------
let g:ale_linters = {
\   'c++': ['clang'],
\   'c': ['clang'],
\}
let g:ale_linters_explicit = 1
let g:ale_completion_enabled = 1
let g:ale_completion_delay = 500
let g:ale_echo_delay = 20
let g:ale_lint_delay = 500
let g:ale_echo_msg_format = '[%linter%] %code: %%s'
let g:ale_lint_on_insert_leave = 0

let g:ale_c_gcc_options = '-Wall -O2 -std=c99'
let g:ale_cpp_gcc_options = '-Wall -O2 -std=c++14'
let g:ale_c_cppcheck_options = ''
let g:ale_cpp_cppcheck_options = ''
let g:ale_sign_error = "\ue009\ue009"
hi! clear SpellBad
hi! clear SpellCap
hi! clear SpellRare
hi! SpellBad gui=undercurl guisp=red
hi! SpellCap gui=undercurl guisp=blue
hi! SpellRare gui=undercurl guisp=magenta
let $GTAGSLABEL = 'native-pygments'
nmap <silent> [W <Plug>(ale_first)
nmap <silent> [w <Plug>(ale_previous)
nmap <silent> ]w <Plug>(ale_next)
nmap <silent> ]W <Plug>(ale_last)
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_save = 1
let g:ale_lint_on_enter = 0
let g:ale_lint_on_filetype_changed = 0
let g:ale_sign_column_always = 1
